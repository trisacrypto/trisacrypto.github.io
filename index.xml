<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on TRISA</title>
    <link>https://trisacrypto.github.io/</link>
    <description>Recent content in Home on TRISA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://trisacrypto.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Demo</title>
      <link>https://trisacrypto.github.io/getting_started/demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trisacrypto.github.io/getting_started/demo/</guid>
      <description>Overview The demo environment can be run in two different modes:
 In standalone mode using docker In development mode running locally  Both environments will handle the setup of a root CA, two subordinate issuing CA&#39;s and 3 different VASP configuration. The first two VASP certificates are issues by the first subordinate CA, the third one by the second subordinate CA.
Standalone Mode This is the easiest way to get a demo environment up-and-running as the only requirement is having docker and docker-compose installed on your system.</description>
    </item>
    
    <item>
      <title>Development</title>
      <link>https://trisacrypto.github.io/getting_started/dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trisacrypto.github.io/getting_started/dev/</guid>
      <description>Build System The TRISA server is currently written in Go. The code repository is setup with Bazel for the compilation and dockerization. Installing Bazel is the primary requirement to get started with development. Bazel will install all the necessary tooling and dependencies completely sandboxed on your system. There is no real need to install Go, protobuf or any other requirements. As everything is sandboxed, Bazel will not disturb any existing tooling on your local machine either.</description>
    </item>
    
    <item>
      <title>Bylaws</title>
      <link>https://trisacrypto.github.io/contributing/bylaws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trisacrypto.github.io/contributing/bylaws/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hackathon</title>
      <link>https://trisacrypto.github.io/conference/hackathon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trisacrypto.github.io/conference/hackathon/</guid>
      <description>Hackathon Slide Deck Projects &amp;amp; Slide Decks  VASP Adress Resolution Enhancement of PII privacy for TRISA transactions Red Flagging Travel Rule Extension TrisaScan Zero Knowledge TRISA  VASP Adress Resolution VASPs need to transfer some required data when sending value to another VASP. One problem that the current implementation of TRISA does not address is recognizing or identifying an address as belonging to a VASP. This proposal complements the TRISA protocol.</description>
    </item>
    
    <item>
      <title>TRISA TESTNET</title>
      <link>https://trisacrypto.github.io/getting_started/testnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trisacrypto.github.io/getting_started/testnet/</guid>
      <description>Introduction For testing purposes to develop new clients and integrations, we have a test PKI available and some VASP nodes running the latest version of TRISA server. This allows for full integration testing without disturbing the production TRISA network mesh.
Test VASP nodes The following VASP nodes are available for testing:
 vasp1.testnet.trisa.io vasp2.testnet.trisa.io vasp3.testnet.trisa.io  Each VASP uses port 8888 for the gRPC peer-to-peer communication and port 9999 for its admin endpoints.</description>
    </item>
    
    <item>
      <title>Documentation</title>
      <link>https://trisacrypto.github.io/contributing/documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trisacrypto.github.io/contributing/documentation/</guid>
      <description>Overview All TRISA related documentation is maintained at Github. From there the documentation website is automatically generated and hosted on Github Pages.
For quick edits to fix typos or make minor changes, there is a convenience link at the bottom of each page to directly edit the content on Github directly. From there you can follow the prompts to submit your pull request for review.
Prerequisites The TRISA repository contains the necessary tooling to run the documentation website on your machine.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://trisacrypto.github.io/contributing/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://trisacrypto.github.io/contributing/license/</guid>
      <description>The MIT License Copyright (c) 2019 CipherTrace, Inc. https://ciphertrace.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</description>
    </item>
    
  </channel>
</rss>